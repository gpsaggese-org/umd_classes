Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%%sql
SELECT DISTINCT title FROM Movie ORDER BY title;
------------------

----- stdout -----
 * sqlite:///relational_db.sqlite
Done.
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[4], line 1[0m
[0;32m----> 1[0m get_ipython()[38;5;241m.[39mrun_cell_magic([38;5;124m'[39m[38;5;124msql[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mSELECT DISTINCT title FROM Movie ORDER BY title;[39m[38;5;130;01m\n[39;00m[38;5;124m'[39m)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2541[0m, in [0;36mInteractiveShell.run_cell_magic[0;34m(self, magic_name, line, cell)[0m
[1;32m   2539[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mbuiltin_trap:
[1;32m   2540[0m     args [38;5;241m=[39m (magic_arg_s, cell)
[0;32m-> 2541[0m     result [38;5;241m=[39m fn([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   2543[0m [38;5;66;03m# The code below prevents the output from being displayed[39;00m
[1;32m   2544[0m [38;5;66;03m# when using magics with decorator @output_can_be_silenced[39;00m
[1;32m   2545[0m [38;5;66;03m# when the last Python token in the expression is a ';'.[39;00m
[1;32m   2546[0m [38;5;28;01mif[39;00m [38;5;28mgetattr[39m(fn, magic[38;5;241m.[39mMAGIC_OUTPUT_CAN_BE_SILENCED, [38;5;28;01mFalse[39;00m):

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/sql/magic.py:219[0m, in [0;36mSqlMagic.execute[0;34m(self, line, cell, local_ns)[0m
[1;32m    216[0m     [38;5;28;01mreturn[39;00m
[1;32m    218[0m [38;5;28;01mtry[39;00m:
[0;32m--> 219[0m     result [38;5;241m=[39m sql[38;5;241m.[39mrun[38;5;241m.[39mrun(conn, parsed[[38;5;124m"[39m[38;5;124msql[39m[38;5;124m"[39m], [38;5;28mself[39m, user_ns)
[1;32m    221[0m     [38;5;28;01mif[39;00m (
[1;32m    222[0m         result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[1;32m    223[0m         [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(result, [38;5;28mstr[39m)
[0;32m   (...)[0m
[1;32m    226[0m         [38;5;66;03m# Instead of returning values, set variables directly in the[39;00m
[1;32m    227[0m         [38;5;66;03m# user's namespace. Variable names given by column names[39;00m
[1;32m    229[0m         [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mautopandas:

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/sql/run.py:374[0m, in [0;36mrun[0;34m(conn, sql, config, user_namespace)[0m
[1;32m    372[0m     [38;5;28;01mif[39;00m result [38;5;129;01mand[39;00m config[38;5;241m.[39mfeedback:
[1;32m    373[0m         [38;5;28mprint[39m(interpret_rowcount(result[38;5;241m.[39mrowcount))
[0;32m--> 374[0m resultset [38;5;241m=[39m ResultSet(result, config)
[1;32m    375[0m [38;5;28;01mif[39;00m config[38;5;241m.[39mautopandas:
[1;32m    376[0m     [38;5;28;01mreturn[39;00m resultset[38;5;241m.[39mDataFrame()

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/sql/run.py:116[0m, in [0;36mResultSet.__init__[0;34m(self, sqlaproxy, config)[0m
[1;32m    114[0m         [38;5;28mlist[39m[38;5;241m.[39m[38;5;21m__init__[39m([38;5;28mself[39m, sqlaproxy[38;5;241m.[39mfetchall())
[1;32m    115[0m     [38;5;28mself[39m[38;5;241m.[39mfield_names [38;5;241m=[39m unduplicate_field_names([38;5;28mself[39m[38;5;241m.[39mkeys)
[0;32m--> 116[0m     [38;5;28mself[39m[38;5;241m.[39mpretty [38;5;241m=[39m PrettyTable([38;5;28mself[39m[38;5;241m.[39mfield_names, style[38;5;241m=[39mprettytable[38;5;241m.[39m[38;5;18m__dict__[39m[config[38;5;241m.[39mstyle[38;5;241m.[39mupper()])
[1;32m    117[0m [38;5;28;01melse[39;00m:
[1;32m    118[0m     [38;5;28mlist[39m[38;5;241m.[39m[38;5;21m__init__[39m([38;5;28mself[39m, [])

[0;31mKeyError[0m: 'DEFAULT'

